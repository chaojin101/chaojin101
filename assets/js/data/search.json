[ { "title": "Web service worker", "url": "/posts/web-service-worker/", "categories": "", "tags": "web", "date": "2023-07-24 00:00:00 +0000", "snippet": "This is a note for MDN web service worker. I will clarity some concepts and add some examples.Clarify skipWaiting() and clients.claim()skipWaiting()skipWaiting() is used in the install event of ser...", "content": "This is a note for MDN web service worker. I will clarity some concepts and add some examples.Clarify skipWaiting() and clients.claim()skipWaiting()skipWaiting() is used in the install event of service worker. It will force the service worker to be activated immediately, instead of waiting for all the pages controlled by the old version of the service worker to be closed.MDN link: skipWaiting()In Basic architecture section of the link above, at point 4, it says: 4 Once all pages controlled by the old version of the service worker have closed, it’s safe to retire the old version, and the newly installed service worker receives an activate event. The primary use of activate is to clean up resources used in previous versions of the service worker. The new service worker can call skipWaiting() to ask to be activated immediately without waiting for open pages to be closed. The new service worker will then receive activate immediately, and will take over any open pages.clients.claim()clients.claim() is used in the activate event of service worker. It will force the service worker to take control of all the pages under its scope, instead of waiting for the pages to be reloaded.MDN link: clients.claim()In Basic architecture section of the link above, at point 5, it says: 5 After activation, the service worker will now control pages, but only those that were opened after the register() is successful. In other words, documents will have to be reloaded to actually be controlled, because a document starts life with or without a service worker and maintains that for its lifetime. To override this default behavior and adopt open pages, a service worker can call clients.claim().Simple exampleindex.html’s inline scriptconst registerServiceWorker = async () =&gt; { if (\"serviceWorker\" in navigator) { try { const registration = await navigator.serviceWorker.register(\"sw.js\"); } catch (error) { console.warn(`Registration failed with ${error}`); } }};registerServiceWorker();sw.jsconst CACHE_NAME = \"v1\";const addResourcesToCache = async (resources) =&gt; { const cache = await caches.open(CACHE_NAME); await cache.addAll(resources);};const putInCache = async (request, response) =&gt; { const cache = await caches.open(CACHE_NAME); await cache.put(request, response);};const cacheFirst = async (request) =&gt; { const responseFromCache = await caches.match(request); if (responseFromCache) { return responseFromCache; } // Next try to get the resource from the network try { const responseFromNetwork = await fetch(request.clone()); putInCache(request, responseFromNetwork.clone()); return responseFromNetwork; } catch (error) { // const fallbackResponse = await caches.match(fallbackUrl); // if (fallbackResponse) { // return fallbackResponse; // } console.warn(error); return new Response(\"Network error happened\", { status: 408, headers: { \"Content-Type\": \"text/plain\" }, }); }};const networkFirst = async (request) =&gt; { try { const response = await fetch(request.clone()); putInCache(request, response.clone()); return response; } catch (error) { const responseFromCache = await caches.match(request); if (responseFromCache) { return responseFromCache; } console.warn(error); return new Response(\"Network error happened\", { status: 408, headers: { \"Content-Type\": \"text/plain\" }, }); }};self.addEventListener(\"install\", (event) =&gt; { event.waitUntil( // TODO: add fallback resources addResourcesToCache([\"./index.html\"]) ); event.waitUntil(self.skipWaiting());});self.addEventListener(\"activate\", (event) =&gt; { event.waitUntil(self.clients.claim());});self.addEventListener(\"fetch\", (event) =&gt; { // request.destination is a string that indicates the type of content being requested. // below is the list of possible values // https://developer.mozilla.org/en-US/docs/Web/API/Request/destination const cacheFirstDestinations = [\"document\", \"style\", \"script\", \"image\"]; const NetworkFirstDestinations = []; if (cacheFirstDestinations.includes(event.request.destination)) { event.respondWith(cacheFirst(event.request)); } else if (NetworkFirstDestinations.includes(event.request.destination)) { event.respondWith(networkFirst(event.request)); } else { // console.log( // \"Not sure how to handle this request:\" + event.request.destination // ); event.respondWith(fetch(event.request)); }});" }, { "title": "Linux regular cmd", "url": "/posts/linux-regular-cmd/", "categories": "", "tags": "linux", "date": "2023-07-24 00:00:00 +0000", "snippet": "ps auxps aux is a command to list all the processes running on the system.lsof -i:portlsof -i:port is a command to list all the processes that are using the port.nohup command &amp;nohup command &a...", "content": "ps auxps aux is a command to list all the processes running on the system.lsof -i:portlsof -i:port is a command to list all the processes that are using the port.nohup command &amp;nohup command &amp; is a command to run the command in the background." }, { "title": "Postgres init setup", "url": "/posts/Postgres-init-setup/", "categories": "", "tags": "postgres", "date": "2023-07-09 00:00:00 +0000", "snippet": "Install postgresapt updateapt upgrade -yapt install postgresql postgresql-contrib -ySet password for postgres userswitch to postgres usersu - postgresenter postgres shellpsqlset password for postgr...", "content": "Install postgresapt updateapt upgrade -yapt install postgresql postgresql-contrib -ySet password for postgres userswitch to postgres usersu - postgresenter postgres shellpsqlset password for postgres user\\password postgresPostgres config filevim /etc/postgresql/14/main/postgresql.confvim /etc/postgresql/14/main/pg_hba.confafter editing, restart postgressystemctl restart postgresqlCancel peer authentication for postgres uservim /etc/postgresql/14/main/pg_hba.confchangelocal all postgres peertolocal all postgres md5Create new usersu - postgrescreateuser --helpCreate new databasesu - postgrescreatedb yourdbname" }, { "title": "How to use nginx to setup https with certbot and let's encrypt", "url": "/posts/How-to-use-nginx-to-setup-https-with-certbot-and-letsencrypt/", "categories": "howto", "tags": "nginx", "date": "2023-07-09 00:00:00 +0000", "snippet": "Install nginxsudo apt updatesudo apt upgrade -ysudo apt install nginx -ypress ‘Enter’ if it prompts to restart some program.Install certbotI’m in Ubuntu 20.04, so I use snap to install certbot.cert...", "content": "Install nginxsudo apt updatesudo apt upgrade -ysudo apt install nginx -ypress ‘Enter’ if it prompts to restart some program.Install certbotI’m in Ubuntu 20.04, so I use snap to install certbot.certbot official instuctionssudo snap install core; sudo snap refresh coresudo snap install --classic certbotRun certbotsudo certbot --nginxfollow the instructions it prompts you.If you only enter one domain, and not add server block for it, it will create two new server blocks in your /etc/nginx/sites-enabled/default file, one for port 80, one for port 443.I will move these two server blocks to /etc/nginx/sites-enabled/yourdomain.com and configure it.Append new domainssudo certbot --nginx -d yourdomain.com -d www.yourdomain.com" }, { "title": "How to set a simple reverse proxy with nginx", "url": "/posts/How-to-set-a-simple-reverse-proxy-with-nginx/", "categories": "howto", "tags": "nginx", "date": "2023-07-09 00:00:00 +0000", "snippet": "Add a new server blocksudo vim /etc/nginx/sites-enabled/yourdomain.comAdd the following contentserver { listen 80; listen [::]:80 server_name yourdomain.com; # or _ if you want to listen t...", "content": "Add a new server blocksudo vim /etc/nginx/sites-enabled/yourdomain.comAdd the following contentserver { listen 80; listen [::]:80 server_name yourdomain.com; # or _ if you want to listen to all domains location / { proxy_pass http://localhost:3000; proxy_set_header X-Real-IP $remote_addr;\t\tproxy_set_header Host $http_host; }}" }, { "title": "Data structure min binary heap", "url": "/posts/Data-structure-min-heap/", "categories": "", "tags": "data structure", "date": "2023-07-07 00:00:00 +0000", "snippet": "DefinitionADT:the amount of vals in heap is n.pop() -&gt; val O(log(n)) get and delete the min val.push(val) -&gt; None O(log(n)) insert a val into heap.top() -&gt; val O(1) get the min val.Impleme...", "content": "DefinitionADT:the amount of vals in heap is n.pop() -&gt; val O(log(n)) get and delete the min val.push(val) -&gt; None O(log(n)) insert a val into heap.top() -&gt; val O(1) get the min val.ImplementationHere is a simple python implementation of min heap.class MinHeap: def __init__(self, vals: list[int]): self.__heap = [val for val in vals] for i in range(len(self.__heap) // 2 - 1, -1, -1): self.__heapify_down(i) def push(self, val: int): self.__heap.append(val) self.__heapify_up(self.size() - 1) def pop(self): if self.size() &lt;= 0: raise Exception(\"can't pop an empty heap\") item = self.__heap[0] self.__heap[0] = self.__heap[self.size() - 1] # replace root with last item self.__heap.pop() # remove last slot self.__heapify_down(0) return item def top(self): if self.size() &lt;= 0: raise Exception(\"can't get top of an empty heap\") return self.__heap[0] def size(self): return len(self.__heap) def __heapify_up(self, index: int): cur_index = index while True: parent_index = self.__get_parent_index(cur_index) if parent_index &lt; 0 or parent_index &gt;= self.size(): break if self.__less(parent_index, cur_index): break self.__swap(parent_index, cur_index) cur_index = parent_index def __heapify_down(self, index: int): cur_index = index while True: left_child_index = self.__get_left_child_index(cur_index) if left_child_index &gt;= self.size() or left_child_index &lt; 0: break min_child_index = left_child_index right_child_index = self.__get_right_child_index(cur_index) if 0 &lt;= right_child_index &lt; self.size() and self.__less( right_child_index, left_child_index ): min_child_index = right_child_index if self.__less(cur_index, min_child_index): break self.__swap(min_child_index, cur_index) cur_index = min_child_index def __less(self, i: int, j: int): return self.__heap[i] &lt; self.__heap[j] def __get_parent_index(self, index: int): return (index - 1) // 2 def __get_left_child_index(self, index: int): return 2 * index + 1 def __get_right_child_index(self, index: int): return 2 * index + 2 def __swap(self, i: int, j: int): self.__heap[i], self.__heap[j] = self.__heap[j], self.__heap[i]if __name__ == \"__main__\": heap = MinHeap([2, 1, 3, 4, 5]) heap.push(0) print(heap.pop()) print(heap.pop()) print(heap.pop()) print(heap.pop()) print(heap.pop()) print(heap.pop())Output:012345Note the index of left child is 2 * index + 1. the index of right child is 2 * index + 2. the index of parent is (index - 1) // 2. the index of last non-leaf node is (len(heap) // 2 - 1).in __init__ method, we start from the last non-leaf node to the root node, do heapify down for each node to construct the min heap.for i in range(len(self.__heap) // 2 - 1, -1, -1): self.__heapify_down(i)Referenceanimation for understandingwhiteboard drawing for understandingsimple python implementation" }, { "title": "How to use tar and gzip", "url": "/posts/How-to-use-tar-and-gzip/", "categories": "howto", "tags": "linux", "date": "2023-06-26 00:00:00 +0000", "snippet": "gzipgzip compress filetouch test.txtgzip test.txtit will make test.txt to test.txt.gzgzip decompress filegzip -d test.txt.gzit will make test.txt.gz to test.txttartar compress file or foldermkdir t...", "content": "gzipgzip compress filetouch test.txtgzip test.txtit will make test.txt to test.txt.gzgzip decompress filegzip -d test.txt.gzit will make test.txt.gz to test.txttartar compress file or foldermkdir ttouch t/test.txttar -zcvf test.tar.gz test.txt-z -gzip: filter the archive through gzip-c -create: create a new archiveit will generate test.tar.gz filetar decompress file or foldertar -zxvf test.tar.gz-x -extract: extract files from an archiveit will generate t/test.txt fileReferences youtube gzip in 100 secondsman tar" }, { "title": "How to setup clash in linux", "url": "/posts/How-to-set-clash-in-linux/", "categories": "howto", "tags": "linux", "date": "2023-06-26 00:00:00 +0000", "snippet": "Setup clashDownload clash github clashwget -O clash.gz https://github.com/Dreamacro/clash/releases/download/v1.16.0/clash-linux-amd64-v1.16.0.gzUnzip clashgzip -f clash.gz -dmake it executablechmo...", "content": "Setup clashDownload clash github clashwget -O clash.gz https://github.com/Dreamacro/clash/releases/download/v1.16.0/clash-linux-amd64-v1.16.0.gzUnzip clashgzip -f clash.gz -dmake it executablechmod +x clashinit clash./clashit will generate a config file named config.yaml in ~/.config/clash/ directoryclose clashPress Ctrl + C to close clashmodify config filewget -U \"Mozilla/6.0\" -O ~/.config/clash/config.yaml 你的Clash订阅链接网址start clash./clashset proxyopen a new terminalexport http_proxy=http://127.0.0.1:7890export https_proxy=http://127.0.0.1:7890verify proxy in usemake a get request before and after set proxycurl https://httpbin.org/ipReferences tutorial in Chinese" }, { "title": "How to modify path environment variable in fish shell", "url": "/posts/How-to-modify-path-environment-variable-in-fish-shell/", "categories": "howto", "tags": "linux", "date": "2023-06-26 00:00:00 +0000", "snippet": "Set path environment variable permanentlyset -U fish_user_paths /usr/local/bin $fish_user_pathsThis will prepend /usr/local/bin permanently to your path, and will affect the current session and all...", "content": "Set path environment variable permanentlyset -U fish_user_paths /usr/local/bin $fish_user_pathsThis will prepend /usr/local/bin permanently to your path, and will affect the current session and all future instances too because the -U argument will make the variable universal.References stackoverflow" }, { "title": "How to download file in linux", "url": "/posts/How-to-download-file-in-linux/", "categories": "howto", "tags": "linux", "date": "2023-06-26 00:00:00 +0000", "snippet": "Download filewget -O httpbin.html https://httpbin.orgit will download the file from https://httpbin.org and save it as httpbin.html", "content": "Download filewget -O httpbin.html https://httpbin.orgit will download the file from https://httpbin.org and save it as httpbin.html" }, { "title": "Words keep in mind", "url": "/posts/Words-keep-in-mind/", "categories": "", "tags": "life", "date": "2023-06-05 00:00:00 +0000", "snippet": "If you find yourself waiting for the moment when you finally feel like you know everything there is to know about coding, know this: the day you’re waiting for will never come. And that is a wonder...", "content": "If you find yourself waiting for the moment when you finally feel like you know everything there is to know about coding, know this: the day you’re waiting for will never come. And that is a wonderful thing.ref: The Key To Accelerating Your Coding Skills" }, { "title": "Python logging", "url": "/posts/Python-logging/", "categories": "", "tags": "python", "date": "2023-05-26 00:00:00 +0000", "snippet": "import logginglogging.basicConfig( level=logging.DEBUG, format=\"%(asctime)s %(levelname)s %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", # filename=\"log.txt\", # set this will log to file)lo...", "content": "import logginglogging.basicConfig( level=logging.DEBUG, format=\"%(asctime)s %(levelname)s %(message)s\", datefmt=\"%Y-%m-%d %H:%M:%S\", # filename=\"log.txt\", # set this will log to file)logging.debug(\"This is a debug message\")logging.info(\"This is an info message\")logging.warning(\"This is a warning message\")logging.error(\"This is an error message\")logging.critical(\"This is a critical message\")2023-05-26 11:43:32 DEBUG This is a debug message2023-05-26 11:43:32 INFO This is an info message2023-05-26 11:43:32 WARNING This is a warning message2023-05-26 11:43:32 ERROR This is an error message2023-05-26 11:43:32 CRITICAL This is a critical message" }, { "title": "Two dimensional img layout", "url": "/posts/Two-dimensional-img-layout/", "categories": "", "tags": "css", "date": "2023-05-12 00:00:00 +0000", "snippet": "This article will introduce three typical two dimensional img layout.The difficulty to achieve is from easy to hard.code for this article I will use Vue to achieve, using vanilla JS is basically t...", "content": "This article will introduce three typical two dimensional img layout.The difficulty to achieve is from easy to hard.code for this article I will use Vue to achieve, using vanilla JS is basically the same. grid responsive flexbox row (notice it will center last row) wookmarkWith code running, you can view my effect in the iPhone SE screen size, there are all responsive in other screen size with more imgs:Let’s see how to achieve the above layout effect. Check the code from repo, the code is easy to understand, I will only point out some import points.grid responsivecode for this exampleProject setup is in REMEAD.md file.I have 8 img placeholder in public foler.Below is src/App.vue file:&lt;script setup lang=\"ts\"&gt;const totalImgAmount = 8;&lt;/script&gt;&lt;template&gt; &lt;div class=\"container\"&gt; &lt;div class=\"img_container\" v-for=\"i in totalImgAmount\"&gt; &lt;img :src=\"`${i}.jpg`\" alt=\"\" /&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;style&gt;.container { display: grid; grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); gap: 4px;}.img_container { aspect-ratio: 3/4;}img { display: block; width: 100%; height: 100%; object-fit: cover;}&lt;/style&gt;If there is no need for other layout, I recommend to use grid to achieve this easy two dimensional img layout.flexbox rowcode for this exampleIn src/App.vue file, I basically just calculate the last row's img amount, and set these last row’s imgs not grow and set it’s flex-basis same as above row's calculated width. If you change your screen size, you need to refresh the page to calculate again. you can add window.addEventListener('resize', callback) to recalculate it.&lt;script setup lang=\"ts\"&gt;import { onMounted } from 'vue';const totalImgAmount = 8;const imgBaseWidth = 100;const gap = 4;const screenWidth = document.body.offsetWidth;const rowImgAmount = Math.floor(screenWidth / (imgBaseWidth + gap));const lastRowImgAmount = totalImgAmount % rowImgAmount;const setLastRowImg = () =&gt; { console.log(lastRowImgAmount); if (lastRowImgAmount) { const img_containers = document.querySelectorAll&lt;HTMLDivElement&gt;(`.img_container`); for ( let i = totalImgAmount lastRowImgAmount; i &lt; totalImgAmount; i++ ) { if (img_containers[i]) { const imgWidth = img_containers[0].offsetWidth img_containers[i].style.flex = `0 ${imgWidth}px`; } } }};onMounted(setLastRowImg);&lt;/script&gt;&lt;template&gt; &lt;div class=\"container\"&gt; &lt;!-- note: v-for starts at 1 include last index --&gt; &lt;div class=\"img_container\" v-for=\"i in totalImgAmount\"&gt; &lt;img :src=\"`${i}.jpg`\" alt=\"\" /&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;style scoped&gt;.container { display: flex; flex-flow: wrap; justify-content: center; gap: 4px;}.img_container { flex: 1 100px; aspect-ratio: 3/4;}img { display: block; width: 100%; height: 100%; object-fit: cover;}&lt;/style&gt;wookmark code for this exampleIn src/App.vue file, I set the col number and gap, other data will be calculate by these two value, notice to get the right auto img height value, we need to wait for the img loaded, then the auto img height will be calculated by browser.&lt;script setup lang=\"ts\"&gt;import { ref, onMounted, computed } from \"vue\";const getMinItemIndex = (arr: number[]) =&gt; { let minItemIndex = 0; for (let i = 1; i &lt; arr.length; i++) { if (arr[i] &lt; arr[minItemIndex]) { minItemIndex = i; } } return minItemIndex;};const imgAmount = ref(8);const containerHeight = ref(1000); // will be caculated after img loadedconst colAmount = ref(3);const gap = ref(4);const colWidth = computed( () =&gt; (document.body.offsetWidth - gap.value * (colAmount.value + 1)) / colAmount.value);const imgRefs = ref&lt;HTMLImageElement[]&gt;([]);const imgContainerStyles = ref&lt;any[]&gt;(new Array(imgAmount.value)); // calculated by imgRefsconst waitImgsLoaded = async () =&gt; { // wait for all the img loaded to get the right img height const promises = []; for (let i = 0; i &lt; imgAmount.value; i++) { const promise = new Promise&lt;void&gt;((resolve) =&gt; { const listener = () =&gt; { imgRefs.value[i].removeEventListener(\"load\", listener); resolve(); }; imgRefs.value[i].addEventListener(\"load\", listener); }); promises.push(promise); } await Promise.all(promises);};const setWookmark = async () =&gt; { await waitImgsLoaded(); // caculate position const colHeights = new Array(colAmount.value).fill(0); for (let i = 0; i &lt; imgAmount.value; i++) { const minHeightColIndex = getMinItemIndex(colHeights); const left = gap.value + minHeightColIndex * (gap.value + colWidth.value); const top = colHeights[minHeightColIndex] + gap.value; imgContainerStyles.value[i] = { position: \"absolute\", left: left + \"px\", top: top + \"px\", }; colHeights[minHeightColIndex] += gap.value + imgRefs.value[i].offsetHeight; } containerHeight.value = Math.max(...colHeights);};onMounted(async () =&gt; { await setWookmark();});&lt;/script&gt;&lt;template&gt; &lt;div :style=\"{ height: containerHeight + 'px' }\" class=\"container\"&gt; &lt;div v-for=\"i in imgAmount\" class=\"img_container\" :style=\"{ width: colWidth + 'px', ...imgContainerStyles[i - 1] }\" &gt; &lt;!-- this i starts at 1 --&gt; &lt;img ref=\"imgRefs\" :src=\"`${i}.jpg`\" alt=\"\" /&gt; &lt;/div&gt; &lt;/div&gt;&lt;/template&gt;&lt;style scoped&gt;.container { position: relative;}img { display: block; width: 100%;}&lt;/style&gt;" }, { "title": "Python alembic usage a migration tool for sqlalchemy", "url": "/posts/Python-alembic/", "categories": "", "tags": "python", "date": "2023-05-11 00:00:00 +0000", "snippet": "This article will introduce basic usage about alembic for migration about SQLAlchemy. I’m in windows 10 and python 3.11.2SetupI’m currently in a new folder named alembic-example folder.Create a vi...", "content": "This article will introduce basic usage about alembic for migration about SQLAlchemy. I’m in windows 10 and python 3.11.2SetupI’m currently in a new folder named alembic-example folder.Create a virtual environment for python.python -m venv venvActivate virtual environment.\\venv\\Scripts\\activateInstall dependencies.pip install alembic psycopg2-binaryRun cmd alembic init {alembic_folder_name}alembic init alembicIt will create a folder named alembic and a file named alembic.ini.In alembic-example folder, create an app folder and create a file named database.py inside app folder.In database.py, you need to configure your connection string CONNECTION_STRimport sqlalchemyfrom sqlalchemy.orm import sessionmaker, declarative_base# Config your connction string //{username}:{password}@{host}:{port}/{database}CONNECTION_STR = 'postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/postgres'engine = sqlalchemy.create_engine(url=CONNECTION_STR)SessionLocal = sessionmaker(bind=engine, autocommit=False, autoflush=False)Base = declarative_base()In app folder, create a file named models.py.In models.py, I simply import database.py’s Base and create a simple table.from app.database import Baseimport sqlalchemy as saclass User(Base): __tablename__ = 'user' id = sa.Column(sa.Integer, primary_key=True, nullable=False)And I also create a __init__.py in app folder.Now, the folder’s structure should be similar like this:alembic-example/ alembic/ ... alembic.ini app/ __init__.py database.py models.pyConfigure alembicIn alembic.ini, change sqlalchemy.urlfromsqlalchemy.url = driver://user:pass@localhost/dbnametosqlalchemy.url = postgresql+psycopg2://postgres:mysecretpassword@localhost:5432/postgresIn alembic/env.py, changefromtarget_metadata = Nonetofrom app.models import Basetarget_metadata = Base.metadataRun alembicCreate a new versionRun alembic revision --autogenerate -m \"{your simple description}\"alembic revision --autogenerate -m \"First revision\"This will generate a migration script in alembic/revision/ folder and a table named alembic_version in database which will be used for controlling database version.Migrate upRun alembic upgrade +1 will upgrade database 1 version,or run alembic upgrade head will upgrade database to newest versionalembic upgrade +1Now the database create a table named user, a column id and an index for idModify table and migrate upAdd a new column username for userHere is updated models.pyfrom app.database import Baseimport sqlalchemy as saclass User(Base): __tablename__ = 'user' id = sa.Column(sa.Integer, primary_key=True, nullable=False) username = sa.Column(sa.String, index=True)Runalembic revision --autogenerate -m \"Add username for user\"alembic upgrade +1refresh the database and see the result, it works.Migrate downMigrade down 1 versionalembic downgrade -1Migrade down to the basealembic downgrade baseTakeawayI think the best pratice is: when you migrate up you git commit the related model file when you migrate down you rollback to related model filealembic revision --autogenerate -m \"First revision\"alembic upgrade +1alembic upgrade headalembic downgrade -1alembic downgrade baseRelated Intro to Database Migrations with Alembic (9min video) Official doc Repository for this example" }, { "title": "Python utils tricks", "url": "/posts/Python-utils/", "categories": "", "tags": "python", "date": "2023-04-18 00:00:00 +0000", "snippet": "timefrom datetime import datetime, timedelta, timezoneimport time'get readable_time or timestamp'readable_time_without_timezone = datetime.utcnow()# 2023-05-14 15:10:37.228020readable_time_without_...", "content": "timefrom datetime import datetime, timedelta, timezoneimport time'get readable_time or timestamp'readable_time_without_timezone = datetime.utcnow()# 2023-05-14 15:10:37.228020readable_time_without_timezone_with_offset = datetime.now()'''# I'm in `+08:00` timezone# this `datetime` object doesn't contain timezone info# it can't do math with `datetime` objects contain timezone info'''# 2023-05-14 23:10:37.228020readable_time = datetime.now(timezone(timedelta(hours=8)))# 2023-05-14 23:10:37.228020+08:00timestamp = time.time()# 1684077037.22802print(readable_time_without_timezone)print(readable_time_without_timezone_with_offset)print(readable_time)print(timestamp)'readable_time &lt;-&gt; timestamp'readable_time_without_timezone_with_offset = datetime.fromtimestamp(timestamp)'''# I'm in `+08:00` timezone# this `datetime` object doesn't contain timezone info# it can't do math with `datetime` objects contain timezone info'''# 2023-05-14 23:10:37.228020readable_time = datetime.fromtimestamp(timestamp, timezone(timedelta(hours=8)))# 2023-05-14 23:10:37.228020+08:00timestamp = datetime.timestamp(readable_time)# 1684077037.22802print(readable_time_without_timezone_with_offset)print(readable_time)print(timestamp)print(readable_time_without_timezone_with_offset - datetime.utcnow())# 8:00:00.000001print(type(readable_time_without_timezone_with_offset - datetime.utcnow()))# &lt;class 'datetime.timedelta'&gt;print(readable_time - datetime.fromtimestamp(timestamp, timezone(timedelta(hours=0))))'2023-05-14 23:10:37.228020+08:00 - 2023-05-14 15:10:37.228020+00:00'# 0:00:00Summary datetime without timezone can only do math with datetime without timezone. datetime with timezone can only do math with datetime with timezone. the math result is timedelta object. datetime without timezone and datetime with timezone are all datetime object." } ]
